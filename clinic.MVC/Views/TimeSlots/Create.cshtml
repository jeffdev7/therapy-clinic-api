@using clinic.CrossCutting.Dto
@model TimeSlotViewModel

@{
    ViewData["Title"] = "Create";
}
<br />
<h3>Novo horário</h3>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Start" class="control-label">Hora inicial</label>
                <input asp-for="Start" class="form-control" />
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="End" class="control-label">Hora de termino</label>
                <input asp-for="End" class="form-control" />
                <span asp-validation-for="End" class="text-danger"></span>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(_ => _.Errors))
                    {
                        <p id="errorMsg">@error.ErrorMessage</p>
                    }
                </div>
            }
            <br />
            <div class="form-group">
                <input type="submit" value="Criar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <style>
        #errorMsg{
            color:red
        }
    </style>
}
