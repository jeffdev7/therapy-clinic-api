@using clinic.CrossCutting.Dto
@model TimeSlotViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>TimeSlot</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Start" class="control-label"></label>
                <input asp-for="Start" class="form-control" />
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="End" class="control-label"></label>
                <input asp-for="End" class="form-control" />
                <span asp-validation-for="End" class="text-danger"></span>
            </div>
            @*  <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsBooked" disabled hidden /> @Html.DisplayNameFor(model => model.IsBooked)
                </label>
            </div> *@
            @if (!ViewData.ModelState.IsValid)
            {
                <div>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(_ => _.Errors))
                    {
                        <p id="errorMsg">@error.ErrorMessage</p>
                    }
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <style>
        #errorMsg{
            color:red
        }
    </style>
}
